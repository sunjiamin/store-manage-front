{"version":3,"sources":["webpack:///src/views/message/message.vue","webpack:///./src/views/message/message.vue?30cb","webpack:///./src/views/message/message.vue"],"names":["message","name","data","_this","this","currentMesList","unreadMesList","hasreadMesList","recyclebinList","currentMessageType","showMesTitleList","unreadCount","hasreadCount","recyclebinCount","noDataText","mes","title","time","content","mesTitleColumns","key","align","ellipsis","render","h","params","on","click","row","formatDate","getContent","index","width","props","type","size","style","margin","unshift","splice","$store","commit","length","markAsreadBtn","deleteMesBtn","restoreBtn","methods","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","backMesTitleList","setCurrentMesType","mesContent","mounted","watch","arr","message_message","_vm","_h","$createElement","_c","_self","staticClass","attrs","long","$event","directives","rawName","value","expression","_v","class-name","count","ref","columns","no-data-text","_e","_s","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/9.d0cf97741ecb8e1597e4.js","sourcesContent":["<style lang=\"less\">\n    @import './message.less';\n</style>\n\n<template>\n    <div class=\"message-main-con\">\n        <div class=\"message-mainlist-con\">\n            <div>\n                <Button @click=\"setCurrentMesType('unread')\" size=\"large\" long type=\"text\"><transition name=\"mes-current-type-btn\"><Icon v-show=\"currentMessageType === 'unread'\" type=\"checkmark\"></Icon></transition><span class=\"mes-type-btn-text\">未读消息</span><Badge class=\"message-count-badge-outer\" class-name=\"message-count-badge\" :count=\"unreadCount\"></Badge></Button>\n            </div>\n            <div>\n                <Button @click=\"setCurrentMesType('hasread')\" size=\"large\" long type=\"text\"><transition name=\"mes-current-type-btn\"><Icon v-show=\"currentMessageType === 'hasread'\" type=\"checkmark\"></Icon></transition><span class=\"mes-type-btn-text\">已读消息</span><Badge class=\"message-count-badge-outer\" class-name=\"message-count-badge\" :count=\"hasreadCount\"></Badge></Button>\n            </div>\n            <div>\n                <Button @click=\"setCurrentMesType('recyclebin')\" size=\"large\" long type=\"text\"><transition name=\"mes-current-type-btn\"><Icon v-show=\"currentMessageType === 'recyclebin'\" type=\"checkmark\"></Icon></transition><span class=\"mes-type-btn-text\">回收站</span><Badge class=\"message-count-badge-outer\" class-name=\"message-count-badge\" :count=\"recyclebinCount\"></Badge></Button>\n            </div>\n        </div>\n        <div class=\"message-content-con\">\n            <transition name=\"view-message\">\n                <div v-if=\"showMesTitleList\" class=\"message-title-list-con\">\n                    <Table ref=\"messageList\" :columns=\"mesTitleColumns\" :data=\"currentMesList\" :no-data-text=\"noDataText\"></Table>\n                </div>\n            </transition>\n            <transition name=\"back-message-list\">\n                <div v-if=\"!showMesTitleList\" class=\"message-view-content-con\">\n                    <div class=\"message-content-top-bar\">\n                        <span class=\"mes-back-btn-con\"><Button type=\"text\" @click=\"backMesTitleList\"><Icon type=\"chevron-left\"></Icon>&nbsp;&nbsp;返回</Button></span>\n                        <h3 class=\"mes-title\">{{ mes.title }}</h3>\n                    </div>\n                    <p class=\"mes-time-con\"><Icon type=\"android-time\"></Icon>&nbsp;&nbsp;{{ mes.time }}</p>\n                    <div class=\"message-content-body\">\n                        <p class=\"message-content\">{{ mes.content }}</p>\n                    </div>\n                </div>\n            </transition>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n    name: 'message_index',\n    data () {\n        const markAsreadBtn = (h, params) => {\n            return h('Button', {\n                props: {\n                    size: 'small'\n                },\n                on: {\n                    click: () => {\n                        this.hasreadMesList.unshift(this.currentMesList.splice(params.index, 1)[0]);\n                        this.$store.commit('setMessageCount', this.unreadMesList.length);\n                    }\n                }\n            }, '标为已读');\n        };\n        const deleteMesBtn = (h, params) => {\n            return h('Button', {\n                props: {\n                    size: 'small',\n                    type: 'error'\n                },\n                on: {\n                    click: () => {\n                        this.recyclebinList.unshift(this.hasreadMesList.splice(params.index, 1)[0]);\n                    }\n                }\n            }, '删除');\n        };\n        const restoreBtn = (h, params) => {\n            return h('Button', {\n                props: {\n                    size: 'small'\n                },\n                on: {\n                    click: () => {\n                        this.hasreadMesList.unshift(this.recyclebinList.splice(params.index, 1)[0]);\n                    }\n                }\n            }, '还原');\n        };\n        return {\n            currentMesList: [],\n            unreadMesList: [],\n            hasreadMesList: [],\n            recyclebinList: [],\n            currentMessageType: 'unread',\n            showMesTitleList: true,\n            unreadCount: 0,\n            hasreadCount: 0,\n            recyclebinCount: 0,\n            noDataText: '暂无未读消息',\n            mes: {\n                title: '',\n                time: '',\n                content: ''\n            },\n            mesTitleColumns: [\n                // {\n                //     type: 'selection',\n                //     width: 50,\n                //     align: 'center'\n                // },\n                {\n                    title: ' ',\n                    key: 'title',\n                    align: 'left',\n                    ellipsis: true,\n                    render: (h, params) => {\n                        return h('a', {\n                            on: {\n                                click: () => {\n                                    this.showMesTitleList = false;\n                                    this.mes.title = params.row.title;\n                                    this.mes.time = this.formatDate(params.row.time);\n                                    this.getContent(params.index);\n                                }\n                            }\n                        }, params.row.title);\n                    }\n                },\n                {\n                    title: ' ',\n                    key: 'time',\n                    align: 'center',\n                    width: 180,\n                    render: (h, params) => {\n                        return h('span', [\n                            h('Icon', {\n                                props: {\n                                    type: 'android-time',\n                                    size: 12\n                                },\n                                style: {\n                                    margin: '0 5px'\n                                }\n                            }),\n                            h('span', {\n                                props: {\n                                    type: 'android-time',\n                                    size: 12\n                                }\n                            }, this.formatDate(params.row.time))\n                        ]);\n                    }\n                },\n                {\n                    title: ' ',\n                    key: 'asread',\n                    align: 'center',\n                    width: 100,\n                    render: (h, params) => {\n                        if (this.currentMessageType === 'unread') {\n                            return h('div', [\n                                markAsreadBtn(h, params)\n                            ]);\n                        } else if (this.currentMessageType === 'hasread') {\n                            return h('div', [\n                                deleteMesBtn(h, params)\n                            ]);\n                        } else {\n                            return h('div', [\n                                restoreBtn(h, params)\n                            ]);\n                        }\n                    }\n                }\n            ]\n        };\n    },\n    methods: {\n        formatDate (time) {\n            let date = new Date(time);\n            let year = date.getFullYear();\n            let month = date.getMonth() + 1;\n            let day = date.getDate();\n            let hour = date.getHours();\n            let minute = date.getMinutes();\n            let second = date.getSeconds();\n            return year + '/' + month + '/' + day + '  ' + hour + ':' + minute + ':' + second;\n        },\n        backMesTitleList () {\n            this.showMesTitleList = true;\n        },\n        setCurrentMesType (type) {\n            if (this.currentMessageType !== type) {\n                this.showMesTitleList = true;\n            }\n            this.currentMessageType = type;\n            if (type === 'unread') {\n                this.noDataText = '暂无未读消息';\n                this.currentMesList = this.unreadMesList;\n            } else if (type === 'hasread') {\n                this.noDataText = '暂无已读消息';\n                this.currentMesList = this.hasreadMesList;\n            } else {\n                this.noDataText = '回收站无消息';\n                this.currentMesList = this.recyclebinList;\n            }\n        },\n        getContent (index) {\n            // you can write ajax request here to get message content\n            let mesContent = '';\n            switch (this.currentMessageType + index) {\n                case 'unread0': mesContent = '这是您点击的《欢迎登录x-boot后台管理系统，来了解他的用途吧》的相关内容。'; break;\n                case 'unread1': mesContent = '这是您点击的《使用iView-admin和iView-ui组件库快速搭建你的后台系统吧》的相关内容。'; break;\n                case 'unread2': mesContent = '这是您点击的《喜欢x-boot的话，欢迎到github主页给个star吧》的相关内容。'; break;\n                case 'hasread0': mesContent = '这是您点击的《这是一条您已经读过的消息》的相关内容。'; break;\n                default: mesContent = '这是您点击的《这是一条被删除的消息》的相关内容。'; break;\n            }\n            this.mes.content = mesContent;\n        }\n    },\n    mounted () {\n        this.currentMesList = this.unreadMesList = [\n            {\n                title: '欢迎登录x-boot后台管理系统，来了解他的用途吧',\n                time: 1507390106000\n            },\n            {\n                title: '使用iView-admin和iView-ui组件库快速搭建你的后台系统吧',\n                time: 1507390106000\n            },\n            {\n                title: '喜欢x-boot的话，欢迎到github主页给个star吧',\n                time: 1507390106000\n            }\n        ];\n        this.hasreadMesList = [\n            {\n                title: '这是一条您已经读过的消息',\n                time: 1507330106000\n            }\n        ];\n        this.recyclebinList = [\n            {\n                title: '这是一条被删除的消息',\n                time: 1506390106000\n            }\n        ];\n        this.unreadCount = this.unreadMesList.length;\n        this.hasreadCount = this.hasreadMesList.length;\n        this.recyclebinCount = this.recyclebinList.length;\n    },\n    watch: {\n        unreadMesList (arr) {\n            this.unreadCount = arr.length;\n        },\n        hasreadMesList (arr) {\n            this.hasreadCount = arr.length;\n        },\n        recyclebinList (arr) {\n            this.recyclebinCount = arr.length;\n        }\n    }\n};\n</script>\n\n\n\n\n// WEBPACK FOOTER //\n// src/views/message/message.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"message-main-con\"},[_c('div',{staticClass:\"message-mainlist-con\"},[_c('div',[_c('Button',{attrs:{\"size\":\"large\",\"long\":\"\",\"type\":\"text\"},on:{\"click\":function($event){_vm.setCurrentMesType('unread')}}},[_c('transition',{attrs:{\"name\":\"mes-current-type-btn\"}},[_c('Icon',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.currentMessageType === 'unread'),expression:\"currentMessageType === 'unread'\"}],attrs:{\"type\":\"checkmark\"}})],1),_c('span',{staticClass:\"mes-type-btn-text\"},[_vm._v(\"未读消息\")]),_c('Badge',{staticClass:\"message-count-badge-outer\",attrs:{\"class-name\":\"message-count-badge\",\"count\":_vm.unreadCount}})],1)],1),_vm._v(\" \"),_c('div',[_c('Button',{attrs:{\"size\":\"large\",\"long\":\"\",\"type\":\"text\"},on:{\"click\":function($event){_vm.setCurrentMesType('hasread')}}},[_c('transition',{attrs:{\"name\":\"mes-current-type-btn\"}},[_c('Icon',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.currentMessageType === 'hasread'),expression:\"currentMessageType === 'hasread'\"}],attrs:{\"type\":\"checkmark\"}})],1),_c('span',{staticClass:\"mes-type-btn-text\"},[_vm._v(\"已读消息\")]),_c('Badge',{staticClass:\"message-count-badge-outer\",attrs:{\"class-name\":\"message-count-badge\",\"count\":_vm.hasreadCount}})],1)],1),_vm._v(\" \"),_c('div',[_c('Button',{attrs:{\"size\":\"large\",\"long\":\"\",\"type\":\"text\"},on:{\"click\":function($event){_vm.setCurrentMesType('recyclebin')}}},[_c('transition',{attrs:{\"name\":\"mes-current-type-btn\"}},[_c('Icon',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.currentMessageType === 'recyclebin'),expression:\"currentMessageType === 'recyclebin'\"}],attrs:{\"type\":\"checkmark\"}})],1),_c('span',{staticClass:\"mes-type-btn-text\"},[_vm._v(\"回收站\")]),_c('Badge',{staticClass:\"message-count-badge-outer\",attrs:{\"class-name\":\"message-count-badge\",\"count\":_vm.recyclebinCount}})],1)],1)]),_vm._v(\" \"),_c('div',{staticClass:\"message-content-con\"},[_c('transition',{attrs:{\"name\":\"view-message\"}},[(_vm.showMesTitleList)?_c('div',{staticClass:\"message-title-list-con\"},[_c('Table',{ref:\"messageList\",attrs:{\"columns\":_vm.mesTitleColumns,\"data\":_vm.currentMesList,\"no-data-text\":_vm.noDataText}})],1):_vm._e()]),_vm._v(\" \"),_c('transition',{attrs:{\"name\":\"back-message-list\"}},[(!_vm.showMesTitleList)?_c('div',{staticClass:\"message-view-content-con\"},[_c('div',{staticClass:\"message-content-top-bar\"},[_c('span',{staticClass:\"mes-back-btn-con\"},[_c('Button',{attrs:{\"type\":\"text\"},on:{\"click\":_vm.backMesTitleList}},[_c('Icon',{attrs:{\"type\":\"chevron-left\"}}),_vm._v(\"  返回\")],1)],1),_vm._v(\" \"),_c('h3',{staticClass:\"mes-title\"},[_vm._v(_vm._s(_vm.mes.title))])]),_vm._v(\" \"),_c('p',{staticClass:\"mes-time-con\"},[_c('Icon',{attrs:{\"type\":\"android-time\"}}),_vm._v(\"  \"+_vm._s(_vm.mes.time))],1),_vm._v(\" \"),_c('div',{staticClass:\"message-content-body\"},[_c('p',{staticClass:\"message-content\"},[_vm._v(_vm._s(_vm.mes.content))])])]):_vm._e()])],1)])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-1d3e6574\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/message/message.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-1d3e6574\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!less-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./message.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./message.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./message.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-1d3e6574\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./message.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/message/message.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}